* Suite: Basic Package Installation
** Given
*** Package A
    - Specified with version 1.0.0
    - Specified with shortname "package_a"
    - Containing files: A1, A2, A3
    - Containing Upset.xml
    - Contained in repository R
*** Upfile.xml
    - Containing dependency for package A
    - Contains default configuration for paths
    - Listing repository R
** Scenario
*** When installing through "Install Dependencies" in menu
*** Expect
    - Files A1, A2, A3 copied to directory Assets/UPackages/package_a~1.0.0
    - Files A1, A2, A3 copied to directory UPackages/package_a~1.0.0
    - Upbring.xml to contain listing for files A1, A2, A3 under Package A
** Comments
   - As repository R isn't subject of test, it doesn't matter which type is it


* Suite: Package Updating
** Given
*** Package A in repo R with Version 1.0.0, that is installed
*** Package A in repo R with Version 1.0.1
** Scenario
*** When opening Update Utility
*** Expect
    - Update utility to show, that version 1.0.1 is available
    - Update button to be enabled
** Scenario
*** When launching Update procedure [1]
*** Expect
    - Package A with version 1.0.0 to be nuked
    - Package A with version 1.0.1 to be installed
** Comments
   - [1] Update procedure can be launched either by clicking or directly from code


* Suite: Customized File Location
** Given
*** Package C
    - With version 1.3.5 and shortname "package_c"
    - With files C1, C2
    - With MEDIA files Media/M1, Media/M2
    - With EXAMPLE files Example/E1, Example/E2, Example/Adv/E3
** Scenario
*** When launching "Install Dependencies"
*** When Upfile.xml Path Configuration is not modified
*** Expect
    - Directory UPackages/package_c~1.3.5 to contain: C1, C2,
      Media/M1, Media/M2, Example/E1, Example/E2, Example/Adv/E3
    - Directory Assets/UPackages/package_c~1.3.5 to contain: C1, C2,
      Media/M1, Media/M2, Example/E1, Example/E2, Example/Adv/E3
** Scenario
*** When launching "Install Dependencies"
*** When Upfile.xml Path Configuration defines
    - MediaPath to be Assets/Media
    - ExamplesPath to be Examples
*** Expect
    - Directory UPackages/package_c~1.3.5 to contain: C1, C2,
      Media/M1, Media/M2, Example/E1, Example/E2, Example/Adv/E3
    - Directory Assets/UPackages/package_c~1.3.5 to contain:
      C1, C2
    - Directory Assets/Media to contain
      package_c~1.3.5/M1, package_c~1.3.5/M2
    - Directory Examples to contain:
      package_c~1.3.5/E1, package_c~1.3.5/E2, package_c~1.3.5/Adv/E3
** Scenario
*** When launching "Install Dependencies"
*** When Upfile.xml Path Configuration defines
    - MediaPath to be Assets/Media
    - ExamplesPath to be Examples
    - MediaPath with SkipPackageStructure set to TRUE
    - ExamplesPath with SkipPackageStructure set to TRUE
*** Expect
    - Directory UPackages/package_c~1.3.5 to contain: C1, C2,
      Media/M1, Media/M2, Example/E1, Example/E2
    - Directory Assets/UPackages/package_c~1.3.5 to contain:
      C1, C2
    - Directory Assets/Media to contain
      M1, M2
    - Directory Examples to contain:
      E1, E2, Adv/E3

** Comments
   - Note - above examples are not yet fully implemented.
   - One notable behaviour here is that we unwind the package to the
     common root, meaning files with paths:
     A/B/C/D/1, A/B/2, A/B/C/3 are going to be unwound as
     C/D/1, 2, C/3 respectively


* Suite: Package nuking
** TODO Describe nuking and follow through
   - It pretty much should remove all the files and directories that
     had been created during installation of package
   - 1st idea: Snapshot dir structure, install, nuke, state == snapshot
   - 2st idea: Snapshot, install, create file within structure, state == snapshot + file

* Suite: CLI Usage
** Given ANY SCENARIO
** Expect
   - ANY UI interaction to be launchable directly from CLI
** Comments
   - Interaction doesn't mean feedback. So, for example, we don't need
     to list outdated packages. We just need to be sure, that we can
     update either targeted or all packages.
   - For consistency we should be able to do this when Unity is actually disabled.

* Jerome's Scenario

  *Scenario #1: add 2 dependencies to our project (transitive dependencies
  not used)*

  no Upackages directory in project

  ../Repository contains

    tools.SimpleBuild v 1.0.27 unity package
    tools.SimpleBuild v 1.0.33 unity package
    JSON NET For Unity 1.5 unity package

  Given

    <Repositories>
      <FileRepository Path="../Repository"/>
    </Repositories>
    <Dependencies>
      <Package Name="tools.SimpleBuild" Version="1.0.27"/>
      <Package Name="JSON NET For Unity" Version="1.5.0"/>
    </Dependencies>

  "Install Dependencies" installs
  * tools.SimpleBuild 1.0.27
  * JSON NET For Unity 1.5.0

  *Scenario #2: after scenario #1 executed*

  modify Upfile.xml to be

    <Repositories>
      <FileRepository Path="../Repository"/>
    </Repositories>
    <Dependencies>
      <Package Name="tools.SimpleBuild" Version="1.0.33"/>
      <Package Name="JSON NET For Unity" Version="1.5.0"/>
    </Dependencies>

  "Install Dependencies" upgrades
  * tools.SimpleBuild to 1.0.33
